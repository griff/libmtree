.\"
.\" Copyright (c) 2015 Michal Ratajsky <michal@FreeBSD.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd August 10, 2015
.Dt MTREE_DIGEST 3
.Os
.Sh NAME
.Nm mtree_digest
.Nd calculate message digests of various types
.Sh LIBRARY
libmtree
.Sh SYNOPSIS
.In mtree.h
.Ft struct mtree_digest *
.Fn mtree_digest_create "int types"
.Ft int
.Fn mtree_digest_get_types "struct mtree_digest *digest"
.Ft int
.Fn mtree_digest_get_available_types
.Ft void
.Fn mtree_digest_update "struct mtree_digest *digest" "const unsigned char *data" "size_t len"
.Ft const char *
.Fn mtree_digest_get_result "struct mtree_digest *digest" "int type"
.Ft void
.Fn mtree_digest_reset "struct mtree_digest *digest"
.Ft void
.Fn mtree_digest_free "struct mtree_digest *digest"
.In mtree.h
.In mtree_file.h
.Ft char *
.Fn mtree_digest_path "int type" "const char *path"
.Ft char *
.Fn mtree_digest_fd "int type" "int fd"
.Sh DESCRIPTION
These functions provide support for calculating message digests, mainly for
their inclusion in the appropriate mtree spec keywords, such as
.Em md5 ,
.Em sha1 ,
.Em sha256 ,
etc.
.Pp
It is seldom necessary to use these functions directly. Both
.Xr mtree_spec 3
and
.Xr mtree_entry 3
provide facilities for calculating the digests and including them in the
appropriate keywords of mtree spec entries.
.Pp
Use
.Fn mtree_digest_create
to create a new
.Tn mtree_digest
structure. The
.Fa types
argument specifies the bitwise OR of the digest types, for which the message
digest should be calculated.
.Pp
The follow types are supported:
.Pp
.Bd -literal -offset indent -compact
MTREE_DIGEST_MD5	The MD5 Message Digest
MTREE_DIGEST_RMD160	The RIPEMD-160 Message Digest
MTREE_DIGEST_SHA1	The SHA-1 Message Digest
MTREE_DIGEST_SHA256	The SHA-256 Message Digest
MTREE_DIGEST_SHA384	The SHA-384 Message Digest
MTREE_DIGEST_SHA512	The SHA-512 Message Digest
.Ed
.Pp
Not all of the listed types may be available on every platform. Use
.Fn mtree_digest_get_types
to find out for which types the digest will be calculated. The returned value
is the same bitwise OR of digest types that was passed to
.Fn mtree_digest_create ,
but all unavailable digest types are excluded.
.Pp
To find out which digest types are available before creating an
.Tn mtree_digest
structure, use
.Fn mtree_digest_get_available_types .
.Pp
The
.Fn mtree_digest_update
function should then be called repeatedly to update the digests with
.Fa data
of size
.Fa len .
.Pp
Use
.Fn mtree_digest_get_result
to finalize the computation and retrieve the digest of the given
.Fa type .
The returned string includes a hexadecimal representation of the digest.
After this function is called, the computation of the digest for the given
.Fa type
is finalized and any further uses of
.Fn mtree_digest_update
will not affect the digest.
.Pp
The
.Fn mtree_digest_reset
function may be used to reset an
.Tn mtree_digest
structure to its initial state.
.Pp
The
.Fn mtree_digest_path
and
.Fn mtree_digest_fd
functions calculate the digest by reading input from the given file path,
or an open file descriptor respectively. The
.Fa type
argument must be a single digest type. Unlike
.Fn mtree_digest_get_result ,
these two functions return newly allocated strings, which should be passed
to
.Xr free 3
when they are no longer needed.
.Pp
Use
.Fn mtree_digest_free
to release the resources allocated for the structure.
.Sh RETURN VALUE
The
.Fn mtree_digest_create
function returns a pointer to a newly allocated
.Tn mtree_digest
structure, or
.Dv NULL
if memory allocation fails.
.Pp
The
.Fn mtree_digest_get_result
function returns the calculated digest as a string. The string is owned by
the
.Tn mtree_digest
structure and must not be freed. The function returns
.Dv NULL
if it fails to allocate memory for the returned string. If digest is not
available for the given
.Fa type ,
the function also returns
.Dv NULL
and sets
.Va errno
to
.Er EINVAL .
.Pp
The
.Fn mtree_digest_get_types
and
.Fn mtree_digest_get_available_types
functions return bitwise OR of digest types.
.Pp
Both
.Fn mtree_digest_path
and
.Fn mtree_digest_fd
return zero on success. On error, they return
.Dv
NULL
and set
.Va errno
appropriately.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa type
argument given to
.Fn mtree_digest_get_result
does not specify one of available digest types given to
.Fn mtree_digest_create .
.Pp
The
.Fa type
argument given to
.Fn mtree_digest_path
or
.Fn mtree_digest_fd
is not valid or the type is not available on the current platform.
.El
.Pp
The
.Fn mtree_digest_fd
function may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr malloc 3
and
.Xr read 2 .
.Pp
The
.Fn mtree_digest_path
function may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr open 2 .
.Sh SEE ALSO
.Xr mtree_entry 3 ,
.Xr mtree_spec 3
.Sh AUTHORS
.An -nosplit
The
.Nm libmtree
library was written by
.An Michal Ratajsky Aq michal@FreeBSD.org .
